@model FSWDFinalProject.DATA.EF.Application

@{
    ViewBag.Title = "Edit";
}

<h2 id="FormHead"></h2>
<h2 class="text-center py-5">Application Edit</h2>


@using (Html.BeginForm("Edit", "Applications", FormMethod.Post, new { @enctype = "mulitpart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ApplicationId)
    <div class="form-horizontal col-md-8" id="Form">
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.OpenPositionId, "OpenPositionId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OpenPositionId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OpenPositionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagerNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerNotes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerNotes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationStatus, "ApplicationStatus", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ApplicationStatus", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ApplicationStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResumeFilename, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                Existing Resume: <img width="150" src="@Url.Content("~/Content/ResumeImg" + Model.ResumeFilename)" /><br /><br />
                Upload a New Resume: <input type="file" style="display:inline" name="resumeImg" />
                @Html.ValidationMessageFor(model => model.ResumeFilename, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
